function cov_ui00rhvps(){var path="C:\\Users\\Marc Salas\\bootcamp2\\skylab-bootcamp-202001\\staff\\marc-salas\\karmark\\karmark-api\\logic\\register-user.js";var hash="f67efd08ab1d4aa7aa5332a9b916ac07e355bee7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Marc Salas\\bootcamp2\\skylab-bootcamp-202001\\staff\\marc-salas\\karmark\\karmark-api\\logic\\register-user.js",statementMap:{"0":{start:{line:1,column:21},end:{line:1,column:45}},"1":{start:{line:2,column:29},end:{line:2,column:52}},"2":{start:{line:3,column:28},end:{line:3,column:53}},"3":{start:{line:4,column:15},end:{line:4,column:34}},"4":{start:{line:13,column:0},end:{line:31,column:1}},"5":{start:{line:14,column:4},end:{line:14,column:33}},"6":{start:{line:15,column:4},end:{line:15,column:39}},"7":{start:{line:16,column:4},end:{line:16,column:41}},"8":{start:{line:17,column:4},end:{line:17,column:41}},"9":{start:{line:19,column:4},end:{line:30,column:24}},"10":{start:{line:21,column:12},end:{line:21,column:96}},"11":{start:{line:21,column:22},end:{line:21,column:96}},"12":{start:{line:23,column:12},end:{line:23,column:44}},"13":{start:{line:26,column:12},end:{line:26,column:85}},"14":{start:{line:28,column:12},end:{line:28,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:17},end:{line:13,column:18}},loc:{start:{line:13,column:56},end:{line:31,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:20,column:14},end:{line:20,column:15}},loc:{start:{line:20,column:22},end:{line:24,column:9}},line:20},"2":{name:"(anonymous_2)",decl:{start:{line:25,column:14},end:{line:25,column:15}},loc:{start:{line:25,column:26},end:{line:29,column:9}},line:25},"3":{name:"(anonymous_3)",decl:{start:{line:30,column:14},end:{line:30,column:15}},loc:{start:{line:30,column:20},end:{line:30,column:23}},line:30}},branchMap:{"0":{loc:{start:{line:21,column:12},end:{line:21,column:96}},type:"if",locations:[{start:{line:21,column:12},end:{line:21,column:96}},{start:{line:21,column:12},end:{line:21,column:96}}],line:21}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f67efd08ab1d4aa7aa5332a9b916ac07e355bee7"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_ui00rhvps=function(){return actualCoverage;};return actualCoverage;}cov_ui00rhvps();const{validate}=(cov_ui00rhvps().s[0]++,require('karmark-utils'));const{models:{User}}=(cov_ui00rhvps().s[1]++,require('karmark-data'));const{NotAllowedError}=(cov_ui00rhvps().s[2]++,require('karmark-errors'));const bcrypt=(cov_ui00rhvps().s[3]++,require('bcryptjs'));/** Creates a new user on the DB with the given data
 *
 * @param {string} name first name of the user
 * @param {string} surname second name or surname of the user
 * @param {string} username username of the user, will be used to login in the application
 * @param {string} password password used for sign in
 */cov_ui00rhvps().s[4]++;module.exports=(name,surname,username,password)=>{cov_ui00rhvps().f[0]++;cov_ui00rhvps().s[5]++;validate.string(name,'name');cov_ui00rhvps().s[6]++;validate.string(surname,'surname');cov_ui00rhvps().s[7]++;validate.string(username,'username');cov_ui00rhvps().s[8]++;validate.string(password,'password');cov_ui00rhvps().s[9]++;return User.findOne({username}).then(user=>{cov_ui00rhvps().f[1]++;cov_ui00rhvps().s[10]++;if(user){cov_ui00rhvps().b[0][0]++;cov_ui00rhvps().s[11]++;throw new NotAllowedError(`user with username ${username} already exists`);}else{cov_ui00rhvps().b[0][1]++;}cov_ui00rhvps().s[12]++;return bcrypt.hash(password,10);}).then(password=>{cov_ui00rhvps().f[2]++;cov_ui00rhvps().s[13]++;user=new User({name,surname,username,password,created:new Date()});cov_ui00rhvps().s[14]++;return user.save();}).then(()=>{cov_ui00rhvps().f[3]++;});};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLXVzZXIuanMiXSwibmFtZXMiOlsidmFsaWRhdGUiLCJyZXF1aXJlIiwibW9kZWxzIiwiVXNlciIsIk5vdEFsbG93ZWRFcnJvciIsImJjcnlwdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJuYW1lIiwic3VybmFtZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJzdHJpbmciLCJmaW5kT25lIiwidGhlbiIsInVzZXIiLCJoYXNoIiwiY3JlYXRlZCIsIkRhdGUiLCJzYXZlIl0sIm1hcHBpbmdzIjoib2dGQUFBLEtBQU0sQ0FBRUEsUUFBRiwwQkFBZUMsT0FBTyxDQUFDLGVBQUQsQ0FBdEIsQ0FBTixDQUNBLEtBQU0sQ0FBRUMsTUFBTSxDQUFFLENBQUVDLElBQUYsQ0FBViwwQkFBdUJGLE9BQU8sQ0FBQyxjQUFELENBQTlCLENBQU4sQ0FDQSxLQUFNLENBQUVHLGVBQUYsMEJBQXNCSCxPQUFPLENBQUMsZ0JBQUQsQ0FBN0IsQ0FBTixDQUNBLEtBQU1JLENBQUFBLE1BQU0seUJBQUdKLE9BQU8sQ0FBQyxVQUFELENBQVYsQ0FBWixDQUVBOzs7Ozs7MEJBT0FLLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixDQUFDQyxJQUFELENBQU9DLE9BQVAsQ0FBZ0JDLFFBQWhCLENBQTBCQyxRQUExQixHQUF1QywrQ0FDcERYLFFBQVEsQ0FBQ1ksTUFBVCxDQUFnQkosSUFBaEIsQ0FBc0IsTUFBdEIsRUFEb0QsdUJBRXBEUixRQUFRLENBQUNZLE1BQVQsQ0FBZ0JILE9BQWhCLENBQXlCLFNBQXpCLEVBRm9ELHVCQUdwRFQsUUFBUSxDQUFDWSxNQUFULENBQWdCRixRQUFoQixDQUEwQixVQUExQixFQUhvRCx1QkFJcERWLFFBQVEsQ0FBQ1ksTUFBVCxDQUFnQkQsUUFBaEIsQ0FBMEIsVUFBMUIsRUFKb0QsdUJBTXBELE1BQU9SLENBQUFBLElBQUksQ0FBQ1UsT0FBTCxDQUFhLENBQUVILFFBQUYsQ0FBYixFQUNGSSxJQURFLENBQ0dDLElBQUksRUFBSSxnREFDVixHQUFJQSxJQUFKLENBQVUsd0RBQU0sSUFBSVgsQ0FBQUEsZUFBSixDQUFxQixzQkFBcUJNLFFBQVMsaUJBQW5ELENBQU4sQ0FBMEUsQ0FBcEYsZ0NBRFUsd0JBR1YsTUFBT0wsQ0FBQUEsTUFBTSxDQUFDVyxJQUFQLENBQVlMLFFBQVosQ0FBc0IsRUFBdEIsQ0FBUCxDQUNILENBTEUsRUFNRkcsSUFORSxDQU1HSCxRQUFRLEVBQUksZ0RBQ2RJLElBQUksQ0FBRyxHQUFJWixDQUFBQSxJQUFKLENBQVMsQ0FBRUssSUFBRixDQUFRQyxPQUFSLENBQWlCQyxRQUFqQixDQUEyQkMsUUFBM0IsQ0FBcUNNLE9BQU8sQ0FBRSxHQUFJQyxDQUFBQSxJQUFKLEVBQTlDLENBQVQsQ0FBUCxDQURjLHdCQUdkLE1BQU9ILENBQUFBLElBQUksQ0FBQ0ksSUFBTCxFQUFQLENBQ0gsQ0FWRSxFQVdGTCxJQVhFLENBV0csSUFBTSx3QkFBRyxDQVhaLENBQVAsQ0FZSCxDQWxCRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgdmFsaWRhdGUgfSA9IHJlcXVpcmUoJ2thcm1hcmstdXRpbHMnKVxyXG5jb25zdCB7IG1vZGVsczogeyBVc2VyIH0gfSA9IHJlcXVpcmUoJ2thcm1hcmstZGF0YScpXHJcbmNvbnN0IHsgTm90QWxsb3dlZEVycm9yIH0gPSByZXF1aXJlKCdrYXJtYXJrLWVycm9ycycpXHJcbmNvbnN0IGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdGpzJylcclxuXHJcbi8qKiBDcmVhdGVzIGEgbmV3IHVzZXIgb24gdGhlIERCIHdpdGggdGhlIGdpdmVuIGRhdGFcclxuICpcclxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgZmlyc3QgbmFtZSBvZiB0aGUgdXNlclxyXG4gKiBAcGFyYW0ge3N0cmluZ30gc3VybmFtZSBzZWNvbmQgbmFtZSBvciBzdXJuYW1lIG9mIHRoZSB1c2VyXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB1c2VybmFtZSB1c2VybmFtZSBvZiB0aGUgdXNlciwgd2lsbCBiZSB1c2VkIHRvIGxvZ2luIGluIHRoZSBhcHBsaWNhdGlvblxyXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFzc3dvcmQgcGFzc3dvcmQgdXNlZCBmb3Igc2lnbiBpblxyXG4gKi9cclxubW9kdWxlLmV4cG9ydHMgPSAobmFtZSwgc3VybmFtZSwgdXNlcm5hbWUsIHBhc3N3b3JkKSA9PiB7XHJcbiAgICB2YWxpZGF0ZS5zdHJpbmcobmFtZSwgJ25hbWUnKVxyXG4gICAgdmFsaWRhdGUuc3RyaW5nKHN1cm5hbWUsICdzdXJuYW1lJylcclxuICAgIHZhbGlkYXRlLnN0cmluZyh1c2VybmFtZSwgJ3VzZXJuYW1lJylcclxuICAgIHZhbGlkYXRlLnN0cmluZyhwYXNzd29yZCwgJ3Bhc3N3b3JkJylcclxuXHJcbiAgICByZXR1cm4gVXNlci5maW5kT25lKHsgdXNlcm5hbWUgfSlcclxuICAgICAgICAudGhlbih1c2VyID0+IHtcclxuICAgICAgICAgICAgaWYgKHVzZXIpIHRocm93IG5ldyBOb3RBbGxvd2VkRXJyb3IoYHVzZXIgd2l0aCB1c2VybmFtZSAke3VzZXJuYW1lfSBhbHJlYWR5IGV4aXN0c2ApXHJcblxyXG4gICAgICAgICAgICByZXR1cm4gYmNyeXB0Lmhhc2gocGFzc3dvcmQsIDEwKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4ocGFzc3dvcmQgPT4ge1xyXG4gICAgICAgICAgICB1c2VyID0gbmV3IFVzZXIoeyBuYW1lLCBzdXJuYW1lLCB1c2VybmFtZSwgcGFzc3dvcmQsIGNyZWF0ZWQ6IG5ldyBEYXRlIH0pXHJcblxyXG4gICAgICAgICAgICByZXR1cm4gdXNlci5zYXZlKClcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKCgpID0+IHsgfSlcclxufVxyXG4iXX0=